{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/util.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/parse.js","../../src/compiler/index.js","../../src/init.js","../../src/index.js"],"sourcesContent":["// 拿到数组原型上的方法 （原来的方法）\nlet oldArrayProtoMethods = Array.prototype;\n\n// 继承一下ES5的方法\nexport let arrayMethods = Object.create(oldArrayProtoMethods);\n\nlet methods = [\"push\", \"pop\", \"shift\", \"unshift\", \"reverse\", \"sort\", \"splice\"];\n\nmethods.forEach((method) => {\n  arrayMethods[method] = function (...args) {\n    // this就是observer里的value\n    const result = oldArrayProtoMethods[method].apply(this, args);\n\n    let inserted;\n    let ob = this.__ob__;\n\n    switch (method) {\n      case \"push\": // arr.push({a:1},{b:2})\n      case \"unshift\": //这两个方法都是追加 追加的内容可能是对象类型，应该被再次进行劫持\n        inserted = args;\n        break;\n      case \"splice\": // vue.$set原理\n        inserted = args.slice(2); // arr.splice(0,1,{a:1},{a:1},{a:1})\n      default:\n        break;\n    }\n    \n    if (inserted) ob.observeArray(inserted); // 给数组新增的值也要进行观测\n    return result;\n  };\n});\n","export function defineProperty(target, key, value) {\n  Object.defineProperty(target, key, {\n    enumerable: false, // 不能被枚举，不能被循环出来\n    configurable: false,\n    value,\n  });\n}\n\nexport function proxy(vm, data, key) {\n  Object.defineProperty(vm, key, {\n    // vm.a\n    get() {\n      return vm[data][key]; // vm._data.a\n    },\n    set(newValue) {\n      // vm.a = 100;\n      vm[data][key] = newValue; // vm._data.a = 100;\n    },\n  });\n}\n","import { arrayMethods } from \"./array\";\nimport { defineProperty } from \"../util\";\n\nclass Observer {\n  constructor(value) {\n    // 使用defineProperty 重新定义属性\n\n    // 判断一个对象是否被观测过看他有没有 __ob__这个属性\n    defineProperty(value, \"__ob__\", this);\n    if (Array.isArray(value)) {\n      // 函数劫持/ 切片编程\n      value.__proto__ = arrayMethods;\n      // 观测数组中的对象类型，对象变化也要做一些事\n      this.observeArray(value);\n    } else {\n      this.walk(value);\n    }\n  }\n  observeArray(value) {\n    value.forEach((item) => {\n      observe(item); // 观测数组中的对象类型\n    });\n  }\n\n  walk(data) {\n    let keys = Object.keys(data); // 获取对象的key\n    keys.forEach((key) => {\n      defineReactive(data, key, data[key]); // Vue.util.defineReactive\n    });\n  }\n}\n\nfunction defineReactive(data, key, value) {\n  //注意点1: 嵌套对象的深层监测\n  observe(value);\n\n  Object.defineProperty(data, key, {\n    get() {\n      console.log(`读取了: ${data}${key}`);\n      return value;\n    },\n\n    set(newValue) {\n      if (newValue === value) return;\n      console.log(`准备设置新值了: ${data}${key}`);\n      observe(newValue); // 如果用户将值改为对象继续监控\n      value = newValue;\n    },\n  });\n}\n\nexport function observe(data) {\n  if (typeof data !== \"object\" || data == null) {\n    return data;\n  }\n  if (data.__ob__) {\n    return data;\n  }\n  return new Observer(data);\n}\n","import { observe } from \"./observer/index\";\nimport { proxy } from './util.js';\n\nexport function initState(vm) {\n  // vm.$options\n  const opts = vm.$options;\n  if (opts.props) {\n    initProps(vm);\n  }\n  if (opts.methods) {\n    initMethods(vm);\n  }\n  if (opts.data) {\n    initData(vm);\n  }\n  if (opts.computed) {\n    initComputed(vm);\n  }\n  if (opts.watch) {\n    initWatch(vm);\n  }\n}\n\nfunction initData(vm) {\n  // 数据的初始化操作\n  let data = vm.$options.data;\n  vm._data = data = typeof data == \"function\" ? data.call(vm) : data;\n  \n  // 当我去vm上取属性时 ，帮我将属性的取值代理到vm._data上\n  for(let key in data){\n    proxy(vm,'_data',key);\n  }\n\n  observe(data);\n}\n\nfunction initProps() {}\nfunction initMethods() {}\n\nfunction initComputed() {}\nfunction initWatch() {}\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名\n// ?:匹配不捕获\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // </my:xx>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute =\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的    aaa=\"aaa\"  a='aaa'   a=aaa\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >    >   <div></div>  <br/>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // 匹配中括号{{}}\n\n// 数据结构 树、栈、链表、队列、\nlet html = \"\";\nlet root;\nlet currentParent;\nlet stack = [];\n\n// 解析html字符串\nexport function parseHTML(htmlContent) {\n  html = htmlContent;\n\n  // 只要html不为空字符串就一直解析\n  while (html) {\n    let text;\n    // 尝试获取 \"<\" 字符\n    let textEnd = html.indexOf(\"<\");\n    // 如果当前内容以\"<\" 字符开头，说明它肯定是一个标签（开始/结束标签）\n    if (textEnd == 0) {\n      // 尝试匹配 是否是开始标签\n      const startTagMatch = parseStartTag();\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs);\n        console.log(\"处理完开始标签的html--\", html);\n        continue;\n      }\n      // 尝试匹配 是否是结束标签\n      const endTagMatch = html.match(endTag);\n      if (endTagMatch) {\n        advance(endTagMatch[0].length);\n        end(endTagMatch[1]); // 将结束标签传入\n        console.log(\"处理完结束标签的html--\", html);\n        continue;\n      }\n    }\n    // 简化的情况下，说明此时的字符内容是 文本类型\n    if (textEnd > 0) {\n      text = html.substring(0, textEnd);\n    }\n    if (text) {\n      // 处理文本\n      advance(text.length);\n      chars(text);\n      console.log(\"处理完文本类型的html--\", html);\n    }\n    // break;\n  }\n\n  console.log('最后生成的AST树--', root)\n  return root;\n}\n\n// 解析开始标签\nfunction parseStartTag() {\n  const start = html.match(startTagOpen);\n  // 如果start命中，说明是开始标签\n  if (start) {\n    // console.log('start', start)\n    const match = {\n      tagName: start[1],\n      attrs: [],\n    };\n    // 获取到 \"<div\" 里的div后，就删除开始标签(\"<div\")\n    advance(start[0].length);\n    // console.log('html--', html)\n\n    // 如果直接是闭合标签了 说明没有属性\n    let end, attr;\n    // 不是结尾标签 && 能匹配到属性\n    while (\n      !(end = html.match(startTagClose)) &&\n      (attr = html.match(attribute))\n    ) {\n      // attrs的value,可能分别是正则匹配组的第3/4/5个索引值\n      match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] });\n      // 处理/缓存下了开始标签里的属性后，就去掉当前属性对应的 字符内容\n      advance(attr[0].length);\n    }\n    // 如果匹配到开始标签的结束字符，就删除它 \">\" + 返回开始标签的缓存对象\n    if (end) {\n      // console.log('end--', end)\n      advance(end[0].length);\n      return match;\n    }\n  }\n}\n\n// 将字符串进行截取操作 在更新html内容\nfunction advance(n) {\n  html = html.substring(n);\n}\n\n// 创建AST单个节点\nfunction createASTElement(tagName, attrs) {\n  return {\n    tag: tagName, // 标签名\n    type: 1, // 元素类型\n    children: [], // 孩子列表\n    attrs, // 属性集合\n    parent: null, // 父元素\n  };\n}\n\nfunction start(tagName, attrs) {\n  // 创建一个AST元素节点 + 如果没有根元素，就把它作为根元素\n  let element = createASTElement(tagName, attrs);\n  if (!root) {\n    root = element;\n  }\n  // 当前解析的标签 保存起来，用于之后构建树形关系\n  currentParent = element;\n  // 将生成的单个ast元素节点放到栈中\n  stack.push(element);\n}\n// 创建文本类型的AST节点 + 作为子节点放入到父节点中\nfunction chars(text) {\n  text = text.trim();\n  if (text) {\n    currentParent.children.push({\n      type: 3,\n      text,\n    });\n  }\n}\n\n// <div> <p></p> hello</div>    currentParent=p\n// 处理结束标签的情况： 创建父子关系\nfunction end(tagName) {\n  // 在结尾标签处 创建父子关系\n  let element = stack.pop(); // 取出栈中的最后一个AST元素节点\n  currentParent = stack[stack.length - 1];\n  if (currentParent) {\n    // 在闭合时可以知道这个标签的父亲是谁\n    element.parent = currentParent;\n    currentParent.children.push(element);\n  }\n}\n","//  <div id=\"app\">hello {{name}} <span>world</span> <p></p></div>\nimport { parseHTML } from \"./parse.js\";\n\n\nexport function compileToFunctions(template) {\n  // html模板 => render函数  (ast是用来描述代码的)\n  // 1.需要将html代码转化成\"ast\"语法树 可以用ast树来描述语言本身\n  let ast = parseHTML(template);\n  \n  // 2.优化静态节点\n\n  // 3.通过这课树 重新的生成代码\n  // let code = generate(ast);\n\n  // 4.将字符串变成函数 限制取值范围 通过with来进行取值 稍后调用render函数就可以通过改变this 让这个函数内部取到结果了\n  // let render = new Function(`with(this){return ${code}}`);\n  // return render;\n\n}\n","import { initState } from \"./state\";\nimport { compileToFunctions } from \"./compiler/index\";\n\n\nexport function initMixin(Vue) {\n  Vue.prototype._init = function (options) {\n    const vm = this;\n    vm.$options = options;\n    // 初始化状态 （将数据做一个初始化的劫持 当我改变数据时应该更新视图）\n    // vue组件中有很多状态 data props watch computed\n    initState(vm);\n\n    // vue里面核心特性 响应式数据原理\n    // Vue 是一个什么样的框架 MVVM\n    // 数据变化视图会更新，视图变化数据会被影响\n    // （MVVM）不能跳过数据去更新视图，$ref\n\n    // 如果当前有el属性说明要渲染模板\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n\n  Vue.prototype.$mount = function (el) {\n    // 挂载操作\n    const vm = this;\n    const options = vm.$options;\n    el = document.querySelector(el);\n\n    if (!options.render) {\n      // 没render 将template转化成render方法\n      let template = options.template;\n      if (!template && el) {\n        template = el.outerHTML;\n      }\n      // 编译原理 将模板编译成render函数\n      // 渲染时用的都是这个render方法\n      const render = compileToFunctions(template);\n      options.render = render;\n    }\n  };\n}\n","import { initMixin } from \"./init\";\n\nfunction Vue(options) {\n  this._init(options); // 入口方法,做初始化操作\n}\n\n// 写成一个个的插件进行对原型的扩展\ninitMixin(Vue);\n\nexport default Vue;\n"],"names":["oldArrayProtoMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","result","apply","inserted","ob","__ob__","slice","observeArray","defineProperty","target","key","value","enumerable","configurable","proxy","vm","data","get","set","newValue","Observer","isArray","__proto__","walk","item","observe","keys","defineReactive","console","log","initState","opts","$options","props","initData","computed","watch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","html","root","currentParent","stack","parseHTML","htmlContent","text","textEnd","indexOf","startTagMatch","parseStartTag","start","tagName","attrs","endTagMatch","match","advance","length","end","substring","chars","attr","push","name","n","createASTElement","tag","type","children","parent","element","trim","pop","compileToFunctions","template","ast","initMixin","Vue","_init","options","el","$mount","document","querySelector","render","outerHTML"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA;EACA,IAAIA,oBAAoB,GAAGC,KAAK,CAACC,SAAjC;;EAGO,IAAIC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcL,oBAAd,CAAnB;EAEP,IAAIM,OAAO,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,OAAhB,EAAyB,SAAzB,EAAoC,SAApC,EAA+C,MAA/C,EAAuD,QAAvD,CAAd;EAEAA,OAAO,CAACC,OAAR,CAAgB,UAACC,MAAD,EAAY;EAC1BL,EAAAA,YAAY,CAACK,MAAD,CAAZ,GAAuB,YAAmB;EAAA,sCAANC,IAAM;EAANA,MAAAA,IAAM;EAAA;;EACxC;EACA,QAAMC,MAAM,GAAGV,oBAAoB,CAACQ,MAAD,CAApB,CAA6BG,KAA7B,CAAmC,IAAnC,EAAyCF,IAAzC,CAAf;EAEA,QAAIG,QAAJ;EACA,QAAIC,EAAE,GAAG,KAAKC,MAAd;;EAEA,YAAQN,MAAR;EACE,WAAK,MAAL,CADF;;EAEE,WAAK,SAAL;EAAgB;EACdI,QAAAA,QAAQ,GAAGH,IAAX;EACA;;EACF,WAAK,QAAL;EAAe;EACbG,QAAAA,QAAQ,GAAGH,IAAI,CAACM,KAAL,CAAW,CAAX,CAAX;EANJ;;EAWA,QAAIH,QAAJ,EAAcC,EAAE,CAACG,YAAH,CAAgBJ,QAAhB,EAlB0B;;EAmBxC,WAAOF,MAAP;EACD,GApBD;EAqBD,CAtBD;;ECRO,SAASO,cAAT,CAAwBC,MAAxB,EAAgCC,GAAhC,EAAqCC,KAArC,EAA4C;EACjDhB,EAAAA,MAAM,CAACa,cAAP,CAAsBC,MAAtB,EAA8BC,GAA9B,EAAmC;EACjCE,IAAAA,UAAU,EAAE,KADqB;EACd;EACnBC,IAAAA,YAAY,EAAE,KAFmB;EAGjCF,IAAAA,KAAK,EAALA;EAHiC,GAAnC;EAKD;EAEM,SAASG,KAAT,CAAeC,EAAf,EAAmBC,IAAnB,EAAyBN,GAAzB,EAA8B;EACnCf,EAAAA,MAAM,CAACa,cAAP,CAAsBO,EAAtB,EAA0BL,GAA1B,EAA+B;EAC7B;EACAO,IAAAA,GAF6B,iBAEvB;EACJ,aAAOF,EAAE,CAACC,IAAD,CAAF,CAASN,GAAT,CAAP,CADI;EAEL,KAJ4B;EAK7BQ,IAAAA,GAL6B,eAKzBC,QALyB,EAKf;EACZ;EACAJ,MAAAA,EAAE,CAACC,IAAD,CAAF,CAASN,GAAT,IAAgBS,QAAhB,CAFY;EAGb;EAR4B,GAA/B;EAUD;;MChBKC;EACJ,oBAAYT,KAAZ,EAAmB;EAAA;;EACjB;EAEA;EACAH,IAAAA,cAAc,CAACG,KAAD,EAAQ,QAAR,EAAkB,IAAlB,CAAd;;EACA,QAAInB,KAAK,CAAC6B,OAAN,CAAcV,KAAd,CAAJ,EAA0B;EACxB;EACAA,MAAAA,KAAK,CAACW,SAAN,GAAkB5B,YAAlB,CAFwB;;EAIxB,WAAKa,YAAL,CAAkBI,KAAlB;EACD,KALD,MAKO;EACL,WAAKY,IAAL,CAAUZ,KAAV;EACD;EACF;;;;mCACYA,OAAO;EAClBA,MAAAA,KAAK,CAACb,OAAN,CAAc,UAAC0B,IAAD,EAAU;EACtBC,QAAAA,OAAO,CAACD,IAAD,CAAP,CADsB;EAEvB,OAFD;EAGD;;;2BAEIR,MAAM;EACT,UAAIU,IAAI,GAAG/B,MAAM,CAAC+B,IAAP,CAAYV,IAAZ,CAAX,CADS;;EAETU,MAAAA,IAAI,CAAC5B,OAAL,CAAa,UAACY,GAAD,EAAS;EACpBiB,QAAAA,cAAc,CAACX,IAAD,EAAON,GAAP,EAAYM,IAAI,CAACN,GAAD,CAAhB,CAAd,CADoB;EAErB,OAFD;EAGD;;;;;;EAGH,SAASiB,cAAT,CAAwBX,IAAxB,EAA8BN,GAA9B,EAAmCC,KAAnC,EAA0C;EACxC;EACAc,EAAAA,OAAO,CAACd,KAAD,CAAP;EAEAhB,EAAAA,MAAM,CAACa,cAAP,CAAsBQ,IAAtB,EAA4BN,GAA5B,EAAiC;EAC/BO,IAAAA,GAD+B,iBACzB;EACJW,MAAAA,OAAO,CAACC,GAAR,+BAAoBb,IAApB,SAA2BN,GAA3B;EACA,aAAOC,KAAP;EACD,KAJ8B;EAM/BO,IAAAA,GAN+B,eAM3BC,QAN2B,EAMjB;EACZ,UAAIA,QAAQ,KAAKR,KAAjB,EAAwB;EACxBiB,MAAAA,OAAO,CAACC,GAAR,uDAAwBb,IAAxB,SAA+BN,GAA/B;EACAe,MAAAA,OAAO,CAACN,QAAD,CAAP,CAHY;;EAIZR,MAAAA,KAAK,GAAGQ,QAAR;EACD;EAX8B,GAAjC;EAaD;;EAEM,SAASM,OAAT,CAAiBT,IAAjB,EAAuB;EAC5B,MAAI,QAAOA,IAAP,MAAgB,QAAhB,IAA4BA,IAAI,IAAI,IAAxC,EAA8C;EAC5C,WAAOA,IAAP;EACD;;EACD,MAAIA,IAAI,CAACX,MAAT,EAAiB;EACf,WAAOW,IAAP;EACD;;EACD,SAAO,IAAII,QAAJ,CAAaJ,IAAb,CAAP;EACD;;ECxDM,SAASc,SAAT,CAAmBf,EAAnB,EAAuB;EAC5B;EACA,MAAMgB,IAAI,GAAGhB,EAAE,CAACiB,QAAhB;;EACA,MAAID,IAAI,CAACE,KAAT,EAAgB;;EAGhB,MAAIF,IAAI,CAAClC,OAAT,EAAkB;;EAGlB,MAAIkC,IAAI,CAACf,IAAT,EAAe;EACbkB,IAAAA,QAAQ,CAACnB,EAAD,CAAR;EACD;;EACD,MAAIgB,IAAI,CAACI,QAAT,EAAmB;;EAGnB,MAAIJ,IAAI,CAACK,KAAT,EAAgB;EAGjB;;EAED,SAASF,QAAT,CAAkBnB,EAAlB,EAAsB;EACpB;EACA,MAAIC,IAAI,GAAGD,EAAE,CAACiB,QAAH,CAAYhB,IAAvB;EACAD,EAAAA,EAAE,CAACsB,KAAH,GAAWrB,IAAI,GAAG,OAAOA,IAAP,IAAe,UAAf,GAA4BA,IAAI,CAACsB,IAAL,CAAUvB,EAAV,CAA5B,GAA4CC,IAA9D,CAHoB;;EAMpB,OAAI,IAAIN,GAAR,IAAeM,IAAf,EAAoB;EAClBF,IAAAA,KAAK,CAACC,EAAD,EAAI,OAAJ,EAAYL,GAAZ,CAAL;EACD;;EAEDe,EAAAA,OAAO,CAACT,IAAD,CAAP;EACD;;EClCD,IAAMuB,MAAM,iCAAZ;EACA;;EACA,IAAMC,YAAY,iBAAUD,MAAV,kBAAwBA,MAAxB,MAAlB;;EACA,IAAME,YAAY,GAAG,IAAIC,MAAJ,aAAgBF,YAAhB,EAArB;;EACA,IAAMG,MAAM,GAAG,IAAID,MAAJ,gBAAmBF,YAAnB,YAAf;;EACA,IAAMI,SAAS,GACb,2EADF;;EAEA,IAAMC,aAAa,GAAG,YAAtB;EAGA;;EACA,IAAIC,IAAI,GAAG,EAAX;EACA,IAAIC,IAAJ;EACA,IAAIC,aAAJ;EACA,IAAIC,KAAK,GAAG,EAAZ;;EAGO,SAASC,SAAT,CAAmBC,WAAnB,EAAgC;EACrCL,EAAAA,IAAI,GAAGK,WAAP,CADqC;;EAIrC,SAAOL,IAAP,EAAa;EACX,QAAIM,IAAI,SAAR,CADW;;EAGX,QAAIC,OAAO,GAAGP,IAAI,CAACQ,OAAL,CAAa,GAAb,CAAd,CAHW;;EAKX,QAAID,OAAO,IAAI,CAAf,EAAkB;EAChB;EACA,UAAME,aAAa,GAAGC,aAAa,EAAnC;;EACA,UAAID,aAAJ,EAAmB;EACjBE,QAAAA,KAAK,CAACF,aAAa,CAACG,OAAf,EAAwBH,aAAa,CAACI,KAAtC,CAAL;EACA/B,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BiB,IAA9B;EACA;EACD,OAPe;;;EAShB,UAAMc,WAAW,GAAGd,IAAI,CAACe,KAAL,CAAWlB,MAAX,CAApB;;EACA,UAAIiB,WAAJ,EAAiB;EACfE,QAAAA,OAAO,CAACF,WAAW,CAAC,CAAD,CAAX,CAAeG,MAAhB,CAAP;EACAC,QAAAA,GAAG,CAACJ,WAAW,CAAC,CAAD,CAAZ,CAAH,CAFe;;EAGfhC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BiB,IAA9B;EACA;EACD;EACF,KArBU;;;EAuBX,QAAIO,OAAO,GAAG,CAAd,EAAiB;EACfD,MAAAA,IAAI,GAAGN,IAAI,CAACmB,SAAL,CAAe,CAAf,EAAkBZ,OAAlB,CAAP;EACD;;EACD,QAAID,IAAJ,EAAU;EACR;EACAU,MAAAA,OAAO,CAACV,IAAI,CAACW,MAAN,CAAP;EACAG,MAAAA,KAAK,CAACd,IAAD,CAAL;EACAxB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BiB,IAA9B;EACD,KA/BU;;EAiCZ;;EAEDlB,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BkB,IAA3B;EACA,SAAOA,IAAP;EACD;;EAGD,SAASS,aAAT,GAAyB;EACvB,MAAMC,KAAK,GAAGX,IAAI,CAACe,KAAL,CAAWpB,YAAX,CAAd,CADuB;;EAGvB,MAAIgB,KAAJ,EAAW;EACT;EACA,QAAMI,KAAK,GAAG;EACZH,MAAAA,OAAO,EAAED,KAAK,CAAC,CAAD,CADF;EAEZE,MAAAA,KAAK,EAAE;EAFK,KAAd,CAFS;;EAOTG,IAAAA,OAAO,CAACL,KAAK,CAAC,CAAD,CAAL,CAASM,MAAV,CAAP,CAPS;EAUT;;EACA,QAAIC,IAAJ,EAASG,IAAT,CAXS;;;EAaT,WACE,EAAEH,IAAG,GAAGlB,IAAI,CAACe,KAAL,CAAWhB,aAAX,CAAR,MACCsB,IAAI,GAAGrB,IAAI,CAACe,KAAL,CAAWjB,SAAX,CADR,CADF,EAGE;EACA;EACAiB,MAAAA,KAAK,CAACF,KAAN,CAAYS,IAAZ,CAAiB;EAAEC,QAAAA,IAAI,EAAEF,IAAI,CAAC,CAAD,CAAZ;EAAiBxD,QAAAA,KAAK,EAAEwD,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAf,IAAsBA,IAAI,CAAC,CAAD;EAAlD,OAAjB,EAFA;;EAIAL,MAAAA,OAAO,CAACK,IAAI,CAAC,CAAD,CAAJ,CAAQJ,MAAT,CAAP;EACD,KArBQ;;;EAuBT,QAAIC,IAAJ,EAAS;EACP;EACAF,MAAAA,OAAO,CAACE,IAAG,CAAC,CAAD,CAAH,CAAOD,MAAR,CAAP;EACA,aAAOF,KAAP;EACD;EACF;EACF;;;EAGD,SAASC,OAAT,CAAiBQ,CAAjB,EAAoB;EAClBxB,EAAAA,IAAI,GAAGA,IAAI,CAACmB,SAAL,CAAeK,CAAf,CAAP;EACD;;;EAGD,SAASC,gBAAT,CAA0Bb,OAA1B,EAAmCC,KAAnC,EAA0C;EACxC,SAAO;EACLa,IAAAA,GAAG,EAAEd,OADA;EACS;EACde,IAAAA,IAAI,EAAE,CAFD;EAEI;EACTC,IAAAA,QAAQ,EAAE,EAHL;EAGS;EACdf,IAAAA,KAAK,EAALA,KAJK;EAIE;EACPgB,IAAAA,MAAM,EAAE,IALH;;EAAA,GAAP;EAOD;;EAED,SAASlB,KAAT,CAAeC,OAAf,EAAwBC,KAAxB,EAA+B;EAC7B;EACA,MAAIiB,OAAO,GAAGL,gBAAgB,CAACb,OAAD,EAAUC,KAAV,CAA9B;;EACA,MAAI,CAACZ,IAAL,EAAW;EACTA,IAAAA,IAAI,GAAG6B,OAAP;EACD,GAL4B;;;EAO7B5B,EAAAA,aAAa,GAAG4B,OAAhB,CAP6B;;EAS7B3B,EAAAA,KAAK,CAACmB,IAAN,CAAWQ,OAAX;EACD;;;EAED,SAASV,KAAT,CAAed,IAAf,EAAqB;EACnBA,EAAAA,IAAI,GAAGA,IAAI,CAACyB,IAAL,EAAP;;EACA,MAAIzB,IAAJ,EAAU;EACRJ,IAAAA,aAAa,CAAC0B,QAAd,CAAuBN,IAAvB,CAA4B;EAC1BK,MAAAA,IAAI,EAAE,CADoB;EAE1BrB,MAAAA,IAAI,EAAJA;EAF0B,KAA5B;EAID;EACF;EAGD;;;EACA,SAASY,GAAT,CAAaN,OAAb,EAAsB;EACpB;EACA,MAAIkB,OAAO,GAAG3B,KAAK,CAAC6B,GAAN,EAAd,CAFoB;;EAGpB9B,EAAAA,aAAa,GAAGC,KAAK,CAACA,KAAK,CAACc,MAAN,GAAe,CAAhB,CAArB;;EACA,MAAIf,aAAJ,EAAmB;EACjB;EACA4B,IAAAA,OAAO,CAACD,MAAR,GAAiB3B,aAAjB;EACAA,IAAAA,aAAa,CAAC0B,QAAd,CAAuBN,IAAvB,CAA4BQ,OAA5B;EACD;EACF;;EChJD;EAIO,SAASG,kBAAT,CAA4BC,QAA5B,EAAsC;EAC3C;EACA;EACA,MAAIC,GAAG,GAAG/B,SAAS,CAAC8B,QAAD,CAAnB,CAH2C;EAO3C;EACA;EAEA;EACA;EACA;EAED;;ECdM,SAASE,SAAT,CAAmBC,GAAnB,EAAwB;EAC7BA,EAAAA,GAAG,CAAC1F,SAAJ,CAAc2F,KAAd,GAAsB,UAAUC,OAAV,EAAmB;EACvC,QAAMtE,EAAE,GAAG,IAAX;EACAA,IAAAA,EAAE,CAACiB,QAAH,GAAcqD,OAAd,CAFuC;EAIvC;;EACAvD,IAAAA,SAAS,CAACf,EAAD,CAAT,CALuC;EAQvC;EACA;EACA;EAEA;;EACA,QAAIA,EAAE,CAACiB,QAAH,CAAYsD,EAAhB,EAAoB;EAClBvE,MAAAA,EAAE,CAACwE,MAAH,CAAUxE,EAAE,CAACiB,QAAH,CAAYsD,EAAtB;EACD;EACF,GAhBD;;EAkBAH,EAAAA,GAAG,CAAC1F,SAAJ,CAAc8F,MAAd,GAAuB,UAAUD,EAAV,EAAc;EACnC;EACA,QAAMvE,EAAE,GAAG,IAAX;EACA,QAAMsE,OAAO,GAAGtE,EAAE,CAACiB,QAAnB;EACAsD,IAAAA,EAAE,GAAGE,QAAQ,CAACC,aAAT,CAAuBH,EAAvB,CAAL;;EAEA,QAAI,CAACD,OAAO,CAACK,MAAb,EAAqB;EACnB;EACA,UAAIV,QAAQ,GAAGK,OAAO,CAACL,QAAvB;;EACA,UAAI,CAACA,QAAD,IAAaM,EAAjB,EAAqB;EACnBN,QAAAA,QAAQ,GAAGM,EAAE,CAACK,SAAd;EACD,OALkB;EAOnB;;;EACA,UAAMD,MAAM,GAAGX,kBAAkB,CAACC,QAAD,CAAjC;EACAK,MAAAA,OAAO,CAACK,MAAR,GAAiBA,MAAjB;EACD;EACF,GAjBD;EAkBD;;ECvCD,SAASP,GAAT,CAAaE,OAAb,EAAsB;EACpB,OAAKD,KAAL,CAAWC,OAAX,EADoB;;EAErB;;;EAGDH,SAAS,CAACC,GAAD,CAAT;;;;;;;;"}