{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/util.js","../../src/observer/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["// 拿到数组原型上的方法 （原来的方法）\nlet oldArrayProtoMethods = Array.prototype;\n\n// 继承一下ES5的方法\nexport let arrayMethods = Object.create(oldArrayProtoMethods);\n\nlet methods = [\"push\", \"pop\", \"shift\", \"unshift\", \"reverse\", \"sort\", \"splice\"];\n\nmethods.forEach((method) => {\n  arrayMethods[method] = function (...args) {\n    // this就是observer里的value\n    const result = oldArrayProtoMethods[method].apply(this, args);\n\n    let inserted;\n    let ob = this.__ob__;\n\n    switch (method) {\n      case \"push\": // arr.push({a:1},{b:2})\n      case \"unshift\": //这两个方法都是追加 追加的内容可能是对象类型，应该被再次进行劫持\n        inserted = args;\n        break;\n      case \"splice\": // vue.$set原理\n        inserted = args.slice(2); // arr.splice(0,1,{a:1},{a:1},{a:1})\n      default:\n        break;\n    }\n    \n    if (inserted) ob.observeArray(inserted); // 给数组新增的值也要进行观测\n    return result;\n  };\n});\n","export function defineProperty(target,key,value){\n    Object.defineProperty(target,key,{\n        enumerable:false, // 不能被枚举，不能被循环出来\n        configurable:false,\n        value\n    });\n}","import { arrayMethods } from \"./array\";\nimport { defineProperty } from \"../util\";\n\nclass Observer {\n  constructor(value) {\n    // 使用defineProperty 重新定义属性\n\n    // 判断一个对象是否被观测过看他有没有 __ob__这个属性\n    defineProperty(value, \"__ob__\", this);\n    if (Array.isArray(value)) {\n      // 函数劫持/ 切片编程\n      value.__proto__ = arrayMethods;\n      // 观测数组中的对象类型，对象变化也要做一些事\n      this.observeArray(value);\n    } else {\n      this.walk(value);\n    }\n  }\n  observeArray(value) {\n    value.forEach((item) => {\n      observe(item); // 观测数组中的对象类型\n    });\n  }\n\n  walk(data) {\n    let keys = Object.keys(data); // 获取对象的key\n    keys.forEach((key) => {\n      defineReactive(data, key, data[key]); // Vue.util.defineReactive\n    });\n  }\n}\n\nfunction defineReactive(data, key, value) {\n  //注意点1: 嵌套对象的深层监测\n  observe(value);\n\n  Object.defineProperty(data, key, {\n    get() {\n      console.log(`读取了: ${data}${key}`);\n      return value;\n    },\n\n    set(newValue) {\n      if (newValue === value) return;\n      console.log(`准备设置新值了: ${data}${key}`);\n      observe(newValue); // 如果用户将值改为对象继续监控\n      value = newValue;\n    },\n  });\n}\n\nexport function observe(data) {\n  if (typeof data !== \"object\" || data == null) {\n    return data;\n  }\n  if (data.__ob__) {\n    return data;\n  }\n  return new Observer(data);\n}\n","import { observe } from \"./observer/index\";\nexport function initState(vm) {\n  // vm.$options\n  const opts = vm.$options;\n  if (opts.props) {\n    initProps(vm);\n  }\n  if (opts.methods) {\n    initMethods(vm);\n  }\n  if (opts.data) {\n    initData(vm);\n  }\n  if (opts.computed) {\n    initComputed(vm);\n  }\n  if (opts.watch) {\n    initWatch(vm);\n  }\n}\n\nfunction initData(vm) {\n  // 数据的初始化操作\n  let data = vm.$options.data;\n  vm._data = data = typeof data == \"function\" ? data.call(vm) : data;\n  // 数据的劫持方案 对象Object.defineProperty\n  // 数组 单独处理的\n  observe(data);\n}\n\nfunction initProps() {}\nfunction initMethods() {}\n\nfunction initComputed() {}\nfunction initWatch() {}\n","import { initState } from \"./state\";\n\nexport function initMixin(Vue) {\n  Vue.prototype._init = function (options) {\n    const vm = this;\n    vm.$options = options;\n    // 初始化状态 （将数据做一个初始化的劫持 当我改变数据时应该更新视图）\n    // vue组件中有很多状态 data props watch computed\n    initState(vm);\n\n    // vue里面核心特性 响应式数据原理\n    // Vue 是一个什么样的框架 MVVM\n    // 数据变化视图会更新，视图变化数据会被影响 \n    // （MVVM）不能跳过数据去更新视图，$ref\n  };\n}\n","import { initMixin } from \"./init\";\n\nfunction Vue(options) {\n  this._init(options); // 入口方法,做初始化操作\n}\n\n// 写成一个个的插件进行对原型的扩展\ninitMixin(Vue);\n\nexport default Vue;\n"],"names":["oldArrayProtoMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","result","apply","inserted","ob","__ob__","slice","observeArray","defineProperty","target","key","value","enumerable","configurable","Observer","isArray","__proto__","walk","item","observe","data","keys","defineReactive","get","console","log","set","newValue","initState","vm","opts","$options","props","initData","computed","watch","_data","call","initMixin","Vue","_init","options"],"mappings":"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"}