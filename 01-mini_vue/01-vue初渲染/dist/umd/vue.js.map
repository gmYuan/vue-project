{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/util.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/parse.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/init.js","../../src/index.js"],"sourcesContent":["// 拿到数组原型上的方法 （原来的方法）\nlet oldArrayProtoMethods = Array.prototype;\n\n// 继承一下ES5的方法\nexport let arrayMethods = Object.create(oldArrayProtoMethods);\n\nlet methods = [\"push\", \"pop\", \"shift\", \"unshift\", \"reverse\", \"sort\", \"splice\"];\n\nmethods.forEach((method) => {\n  arrayMethods[method] = function (...args) {\n    // this就是observer里的value\n    const result = oldArrayProtoMethods[method].apply(this, args);\n\n    let inserted;\n    let ob = this.__ob__;\n\n    switch (method) {\n      case \"push\": // arr.push({a:1},{b:2})\n      case \"unshift\": //这两个方法都是追加 追加的内容可能是对象类型，应该被再次进行劫持\n        inserted = args;\n        break;\n      case \"splice\": // vue.$set原理\n        inserted = args.slice(2); // arr.splice(0,1,{a:1},{a:1},{a:1})\n      default:\n        break;\n    }\n    \n    if (inserted) ob.observeArray(inserted); // 给数组新增的值也要进行观测\n    return result;\n  };\n});\n","export function defineProperty(target, key, value) {\n  Object.defineProperty(target, key, {\n    enumerable: false, // 不能被枚举，不能被循环出来\n    configurable: false,\n    value,\n  });\n}\n\nexport function proxy(vm, data, key) {\n  Object.defineProperty(vm, key, {\n    // vm.a\n    get() {\n      return vm[data][key]; // vm._data.a\n    },\n    set(newValue) {\n      // vm.a = 100;\n      vm[data][key] = newValue; // vm._data.a = 100;\n    },\n  });\n}\n","import { arrayMethods } from \"./array\";\nimport { defineProperty } from \"../util\";\n\nclass Observer {\n  constructor(value) {\n    // 使用defineProperty 重新定义属性\n\n    // 判断一个对象是否被观测过看他有没有 __ob__这个属性\n    defineProperty(value, \"__ob__\", this);\n    if (Array.isArray(value)) {\n      // 函数劫持/ 切片编程\n      value.__proto__ = arrayMethods;\n      // 观测数组中的对象类型，对象变化也要做一些事\n      this.observeArray(value);\n    } else {\n      this.walk(value);\n    }\n  }\n  observeArray(value) {\n    value.forEach((item) => {\n      observe(item); // 观测数组中的对象类型\n    });\n  }\n\n  walk(data) {\n    let keys = Object.keys(data); // 获取对象的key\n    keys.forEach((key) => {\n      defineReactive(data, key, data[key]); // Vue.util.defineReactive\n    });\n  }\n}\n\nfunction defineReactive(data, key, value) {\n  //注意点1: 嵌套对象的深层监测\n  observe(value);\n\n  Object.defineProperty(data, key, {\n    get() {\n      console.log(`读取了: ${data}${key}`);\n      return value;\n    },\n\n    set(newValue) {\n      if (newValue === value) return;\n      console.log(`准备设置新值了: ${data}${key}`);\n      observe(newValue); // 如果用户将值改为对象继续监控\n      value = newValue;\n    },\n  });\n}\n\nexport function observe(data) {\n  if (typeof data !== \"object\" || data == null) {\n    return data;\n  }\n  if (data.__ob__) {\n    return data;\n  }\n  return new Observer(data);\n}\n","import { observe } from \"./observer/index\";\nimport { proxy } from './util.js';\n\nexport function initState(vm) {\n  // vm.$options\n  const opts = vm.$options;\n  if (opts.props) {\n    initProps(vm);\n  }\n  if (opts.methods) {\n    initMethods(vm);\n  }\n  if (opts.data) {\n    initData(vm);\n  }\n  if (opts.computed) {\n    initComputed(vm);\n  }\n  if (opts.watch) {\n    initWatch(vm);\n  }\n}\n\nfunction initData(vm) {\n  // 数据的初始化操作\n  let data = vm.$options.data;\n  vm._data = data = typeof data == \"function\" ? data.call(vm) : data;\n  \n  // 当我去vm上取属性时 ，帮我将属性的取值代理到vm._data上\n  for(let key in data){\n    proxy(vm,'_data',key);\n  }\n\n  observe(data);\n}\n\nfunction initProps() {}\nfunction initMethods() {}\n\nfunction initComputed() {}\nfunction initWatch() {}\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名\n// ?:匹配不捕获\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // </my:xx>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute =\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的    aaa=\"aaa\"  a='aaa'   a=aaa\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >    >   <div></div>  <br/>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // 匹配中括号{{}}\n\n// 数据结构 树、栈、链表、队列、\nlet html = \"\";\nlet root;\nlet currentParent;\nlet stack = [];\n\n// 解析html字符串\nexport function parseHTML(htmlContent) {\n  html = htmlContent;\n\n  // 只要html不为空字符串就一直解析\n  while (html) {\n    let text;\n    // 尝试获取 \"<\" 字符\n    let textEnd = html.indexOf(\"<\");\n    // 如果当前内容以\"<\" 字符开头，说明它肯定是一个标签（开始/结束标签）\n    if (textEnd == 0) {\n      // 尝试匹配 是否是开始标签\n      const startTagMatch = parseStartTag();\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs);\n        console.log(\"处理完开始标签的html--\", html);\n        continue;\n      }\n      // 尝试匹配 是否是结束标签\n      const endTagMatch = html.match(endTag);\n      if (endTagMatch) {\n        advance(endTagMatch[0].length);\n        end(endTagMatch[1]); // 将结束标签传入\n        console.log(\"处理完结束标签的html--\", html);\n        continue;\n      }\n    }\n    // 简化的情况下，说明此时的字符内容是 文本类型\n    if (textEnd > 0) {\n      text = html.substring(0, textEnd);\n    }\n    if (text) {\n      // 处理文本\n      advance(text.length);\n      chars(text);\n      console.log(\"处理完文本类型的html--\", html);\n    }\n    // break;\n  }\n\n  console.log('最后生成的AST树--', root)\n  return root;\n}\n\n// 解析开始标签\nfunction parseStartTag() {\n  const start = html.match(startTagOpen);\n  // 如果start命中，说明是开始标签\n  if (start) {\n    // console.log('start', start)\n    const match = {\n      tagName: start[1],\n      attrs: [],\n    };\n    // 获取到 \"<div\" 里的div后，就删除开始标签(\"<div\")\n    advance(start[0].length);\n    // console.log('html--', html)\n\n    // 如果直接是闭合标签了 说明没有属性\n    let end, attr;\n    // 不是结尾标签 && 能匹配到属性\n    while (\n      !(end = html.match(startTagClose)) &&\n      (attr = html.match(attribute))\n    ) {\n      // attrs的value,可能分别是正则匹配组的第3/4/5个索引值\n      match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] });\n      // 处理/缓存下了开始标签里的属性后，就去掉当前属性对应的 字符内容\n      advance(attr[0].length);\n    }\n    // 如果匹配到开始标签的结束字符，就删除它 \">\" + 返回开始标签的缓存对象\n    if (end) {\n      // console.log('end--', end)\n      advance(end[0].length);\n      return match;\n    }\n  }\n}\n\n// 将字符串进行截取操作 在更新html内容\nfunction advance(n) {\n  html = html.substring(n);\n}\n\n// 创建AST单个节点\nfunction createASTElement(tagName, attrs) {\n  return {\n    tag: tagName, // 标签名\n    type: 1, // 元素类型\n    children: [], // 孩子列表\n    attrs, // 属性集合\n    parent: null, // 父元素\n  };\n}\n\nfunction start(tagName, attrs) {\n  // 创建一个AST元素节点 + 如果没有根元素，就把它作为根元素\n  let element = createASTElement(tagName, attrs);\n  if (!root) {\n    root = element;\n  }\n  // 当前解析的标签 保存起来，用于之后构建树形关系\n  currentParent = element;\n  // 将生成的单个ast元素节点放到栈中\n  stack.push(element);\n}\n// 创建文本类型的AST节点 + 作为子节点放入到父节点中\nfunction chars(text) {\n  text = text.trim();\n  if (text) {\n    currentParent.children.push({\n      type: 3,\n      text,\n    });\n  }\n}\n\n// <div> <p></p> hello</div>    currentParent=p\n// 处理结束标签的情况： 创建父子关系\nfunction end(tagName) {\n  // 在结尾标签处 创建父子关系\n  let element = stack.pop(); // 取出栈中的最后一个AST元素节点\n  currentParent = stack[stack.length - 1];\n  if (currentParent) {\n    // 在闭合时可以知道这个标签的父亲是谁\n    element.parent = currentParent;\n    currentParent.children.push(element);\n  }\n}\n","// 编写 <div id=\"app\" style=\"color:red\"> hello {{name}} <span>hello</span></div>\n\n// 结果:render(){\n//    return _c('div',{id:'app',style:{color:'red'}},_v('hello'+_s(name)),_c('span',null,_v('hello')))\n//}\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\n\nexport function generate(el) {\n  let children = genChildren(el); // 儿子的生成\n  let code = `_c('${el.tag}',${\n    el.attrs.length ? `${genProps(el.attrs)}` : \"undefined\"\n  }${children ? `,${children}` : \"\"})`;\n  return code;\n}\n\n//  语法层面的转义\nfunction genProps(attrs) {\n  // [{name: id, value: \"app\"}, {name: style, value: \"fontSize:12px;color:red\"} ]\n  let str = \"\";\n  for (let i = 0; i < attrs.length; i++) {\n    let attr = attrs[i];\n\t\t// 对样式进行特殊的处理\n    if (attr.name === \"style\") {\n      let obj = {}; \n      attr.value.split(\";\").forEach((item) => {\n        let [key, value] = item.split(\":\");\n        obj[key] = value;\n      });\n      attr.value = obj;\n    }\n    str += `${attr.name}:${JSON.stringify(attr.value)},`;\n  }\n\t// 去除最后一个多余的“,” 逗号字符串\n  return `{${str.slice(0, -1)}}`;\n}\n\nfunction genChildren(el) {\n  const children = el.children;\n  if (children) {\n    // 将所有转化后的儿子，用逗号拼接起来\n    return children.map(child => gen(child)).join(\",\");\n  }\n}\n\nfunction gen(node) {\n  if (node.type == 1) {\n\t\t// 递归调用generate，从而生成元素节点的 字符串\n    return generate(node); \n  } else {\n    let text = node.text; // 获取文本\n    // 如果是普通文本，即不带{{}}\n\t\t// _v('hello {{ name }} world {{msg}} aa')   => _v('hello'+_s(name) +'world' + _s(msg))\n    if (!defaultTagRE.test(text)) {\n      return `_v(${JSON.stringify(text)})`; \n    }\n\n\t\t// 处理带有变量的文本内容\n    let tokens = []; // 存放每一段的代码\n    let lastIndex = (defaultTagRE.lastIndex = 0); // 如果正则是全局模式 需要每次使用前置为0\n    let match, index; // 每次匹配到的结果\n    while ((match = defaultTagRE.exec(text))) {\n\t\t\tconsole.log('match--', match)\n      index = match.index; // 保存匹配到的索引\n\t\t\t// 存入变量文本前的 普通文本内容\n      if (index > lastIndex) {\n        tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n      }\n\t\t\t// 存入变量文本内容 + 更新lastIndex指向\n      tokens.push(`_s(${match[1].trim()})`);\n      lastIndex = index + match[0].length;\n    }\n\t\t// 存入变量文本后的 普通文本内容\n    if (lastIndex < text.length) {\n      tokens.push(JSON.stringify(text.slice(lastIndex)));\n    }\n\t\tconsole.log('tokens--', tokens)\n    return `_v(${tokens.join(\"+\")})`;\n  }\n}\n","//  <div id=\"app\">hello {{name}} <span>world</span> <p></p></div>\nimport { parseHTML } from \"./parse.js\";\nimport { generate } from \"./generate\";\n\n\nexport function compileToFunctions(template) {\n  // html模板 => render函数  (ast是用来描述代码的)\n  // 1.需要将html代码转化成\"ast\"语法树 可以用ast树来描述语言本身\n  let ast = parseHTML(template);\n  \n  // 2.优化静态节点\n\n  // 3.通过这课树 重新的生成代码\n  let code = generate(ast);\n  console.log('generateCode--', code)\n\n  // 4.将字符串变成函数 限制取值范围 通过with来进行取值 \n  // 稍后调用render函数就可以通过改变this 让这个函数内部取到结果了\n  let render = new Function(`with(this){return ${code}}`);\n  console.log('render--', render)\n  return render;\n\n}\n","import { initState } from \"./state\";\nimport { compileToFunctions } from \"./compiler/index\";\n\n\nexport function initMixin(Vue) {\n  Vue.prototype._init = function (options) {\n    const vm = this;\n    vm.$options = options;\n    // 初始化状态 （将数据做一个初始化的劫持 当我改变数据时应该更新视图）\n    // vue组件中有很多状态 data props watch computed\n    initState(vm);\n\n    // vue里面核心特性 响应式数据原理\n    // Vue 是一个什么样的框架 MVVM\n    // 数据变化视图会更新，视图变化数据会被影响\n    // （MVVM）不能跳过数据去更新视图，$ref\n\n    // 如果当前有el属性说明要渲染模板\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n\n  Vue.prototype.$mount = function (el) {\n    // 挂载操作\n    const vm = this;\n    const options = vm.$options;\n    el = document.querySelector(el);\n\n    if (!options.render) {\n      // 没render 将template转化成render方法\n      let template = options.template;\n      if (!template && el) {\n        template = el.outerHTML;\n      }\n      // 编译原理 将模板编译成render函数\n      // 渲染时用的都是这个render方法\n      const render = compileToFunctions(template);\n      options.render = render;\n    }\n  };\n}\n","import { initMixin } from \"./init\";\n\nfunction Vue(options) {\n  this._init(options); // 入口方法,做初始化操作\n}\n\n// 写成一个个的插件进行对原型的扩展\ninitMixin(Vue);\n\nexport default Vue;\n"],"names":["oldArrayProtoMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","_len","arguments","length","args","_key","result","apply","inserted","ob","__ob__","slice","observeArray","defineProperty","target","key","value","enumerable","configurable","proxy","vm","data","get","set","newValue","Observer","_classCallCheck","isArray","__proto__","walk","_createClass","item","observe","keys","defineReactive","console","log","concat","_typeof","initState","opts","$options","props","initData","computed","watch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","html","root","currentParent","stack","parseHTML","htmlContent","text","textEnd","indexOf","startTagMatch","parseStartTag","start","tagName","attrs","endTagMatch","match","advance","end","substring","chars","attr","push","name","n","createASTElement","tag","type","children","parent","element","trim","pop","defaultTagRE","generate","el","genChildren","code","genProps","str","_loop","i","obj","split","_item$split","_item$split2","_slicedToArray","JSON","stringify","map","child","gen","join","node","test","tokens","lastIndex","index","exec","compileToFunctions","template","ast","render","Function","initMixin","Vue","_init","options","$mount","document","querySelector","outerHTML"],"mappings":"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"}