{"version":3,"file":"vue.js","sources":["../../src/observer/array.js","../../src/util.js","../../src/observer/dep.js","../../src/observer/index.js","../../src/observer/watcher.js","../../src/state.js","../../src/compiler/parse.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/index.js","../../src/global-api/index.js","../../src/index.js"],"sourcesContent":["// 拿到数组原型上的方法 （原来的方法）\nlet oldArrayProtoMethods = Array.prototype;\n\n// 继承一下ES5的方法\nexport let arrayMethods = Object.create(oldArrayProtoMethods);\n\nlet methods = [\"push\", \"pop\", \"shift\", \"unshift\", \"reverse\", \"sort\", \"splice\"];\n\nmethods.forEach((method) => {\n  arrayMethods[method] = function (...args) {\n    // 当调用数组我们劫持后的这7个方法，页面应该更新：要知道数组对应哪个dep\n    // this就是observer里的value\n    const result = oldArrayProtoMethods[method].apply(this, args);\n    let inserted;\n    let ob = this.__ob__;\n    // debugger\n\n    switch (method) {\n      case \"push\": // arr.push({a:1},{b:2})\n      case \"unshift\": //这两个方法都是追加 追加的内容可能是对象类型，应该被再次进行劫持\n        inserted = args;\n        break;\n      case \"splice\": // vue.$set原理\n        inserted = args.slice(2); // arr.splice(0,1,{a:1},{a:1},{a:1})\n      default:\n        break;\n    }\n    \n    // debugger\n    // 注意点4：对通过数组方法新增的值，也需要进行观测每一项内容\n    if (inserted) ob.observeArray(inserted); \n\n    ob.dep.notify(); // 通知数组更新\n    return result;\n  };\n});\n","export function defineProperty(target, key, value) {\n  Object.defineProperty(target, key, {\n    enumerable: false, // 不能被枚举，不能被循环出来\n    configurable: false,\n    value,\n  });\n}\n\nexport function proxy(vm, data, key) {\n  Object.defineProperty(vm, key, {\n    // vm.a\n    get() {\n      return vm[data][key]; // vm._data.a\n    },\n    set(newValue) {\n      // vm.a = 100;\n      vm[data][key] = newValue; // vm._data.a = 100;\n    },\n  });\n}\n\nexport const LIFECYCLE_HOOKS = [\n  \"beforeCreate\",\n  \"created\",\n  \"beforeMount\",\n  \"mounted\",\n  \"beforeUpdate\",\n  \"updated\",\n  \"beforeDestroy\",\n  \"destroyed\",\n];\n\nconst strats = {};\nstrats.data = function (parentVal, childValue) {\n  return childValue; // 这里应该有合并data的策略\n};\n// strats.computed = function() {}\n// strats.watch = function() {}\nLIFECYCLE_HOOKS.forEach((hook) => {\n  strats[hook] = mergeHook;\n});\n\nfunction mergeHook(parentVal, childValue) {\n  // 生命周期的合并\n  if (childValue) {\n    if (parentVal) {\n      return parentVal.concat(childValue); // 爸爸和儿子进行拼接\n    } else {\n      return [childValue]; //儿子需要转化成数组\n    }\n  } else {\n    return parentVal; // 不合并了 采用父亲的\n  }\n}\n\n// 合并父子对象\nexport function mergeOptions(parent, child) {\n  const options = {};\n  for (let key in parent) {\n    // 父亲和儿子都有的key, 在这就处理了\n    mergeField(key);\n  }\n\n  // 父亲没有儿子有的属性 在这处理\n  for (let key in child) {\n    // 将儿子多的赋予到父亲上\n    if (!parent.hasOwnProperty(key)) {\n      mergeField(key);\n    }\n  }\n\n  function mergeField(key) {\n    // 合并字段\n    // 根据key 不同的策略来进行合并\n    if (strats[key]) {\n      options[key] = strats[key](parent[key], child[key]);\n    } else {\n      // todo默认合并\n      options[key] = child[key];\n    }\n  }\n\n  return options;\n}\n\n\n// nextTick相关\nconst callbacks = [];\nlet pending = false;\nfunction flushCallbacks() {\n  while (callbacks.length) {\n    let cb = callbacks.shift();\n    cb();\n  } // 让nextTick中传入的方法依次执行\n  pending = false; // 标识已经执行完毕\n}\n\n// debugger\nlet timerFunc;\nif (Promise) {\n  timerFunc = () => {\n    Promise.resolve().then(flushCallbacks); // 异步处理更新\n  };\n} else if (MutationObserver) {\n  // 可以监控dom变化,监控完毕后是异步更新\n  let observe = new MutationObserver(flushCallbacks);\n  let textNode = document.createTextNode(1); // 先创建一个文本节点\n  observe.observe(textNode, { characterData: true }); // 观测文本节点中的内容\n  timerFunc = () => {\n    textNode.textContent = 2; // 文中的内容改成2\n  };\n} else if (setImmediate) {\n  timerFunc = () => {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  timerFunc = () => {\n    setTimeout(flushCallbacks);\n  };\n}\n\nexport function nextTick(cb) {\n  // 因为内部会调用nextTick 用户也会调用，但是异步只需要一次\n  callbacks.push(cb);\n  if (!pending) {\n    // vue3 里的nextTick原理就是promise.then 没有做兼容性处理了\n    timerFunc(); // 这个方法是异步方法 做了兼容处理了\n    pending = true;\n  }\n}\n","let id = 0;\n\n// dep和watcher是多对多的关系 1个属性就有一个dep，用来收集watcher\n// 1个dep 可以存多个watcher\n// 1个watcher可以对应 多个dep\n\nclass Dep {\n  constructor() {\n    this.subs = [];\n    this.id = id++;\n  }\n  // 实现watcher和dep的双向存储记忆\n  depend() {\n    Dep.target.addDep(this);\n    // this.subs.push(Dep.target);\n  }\n\n  addSub(watcher) {\n    this.subs.push(watcher);\n  }\n\n  notify() {\n    this.subs.forEach((watcher) => watcher.update());\n  }\n}\n\nDep.target = null; // 静态属性\nexport function pushTarget(watcher) {\n  Dep.target = watcher; // 保留watcher\n}\n\nexport function popTarget() {\n  Dep.target = null; // 将变量删除掉\n}\n\nexport default Dep;\n","import { arrayMethods } from \"./array\";\nimport { defineProperty } from \"../util\";\nimport Dep from \"./dep\";\n\nclass Observer {\n  // 使用defineProperty 重新定义属性\n  constructor(value) {\n    // debugger\n    this.dep = new Dep(); // value = {}  value = []\n\n    // 判断一个对象是否被观测过看他有没有 __ob__这个属性\n    defineProperty(value, \"__ob__\", this);\n    if (Array.isArray(value)) {\n      // 函数劫持/ 切片编程\n      value.__proto__ = arrayMethods;\n      // 观测数组中的对象类型，对象变化也要做一些事，注意普通类型是不做观测的\n      this.observeArray(value);\n    } else {\n      this.walk(value);\n    }\n  }\n  observeArray(value) {\n    value.forEach((item) => {\n      // 注意点2: 观测数组中的对象类型\n      observe(item);\n    });\n  }\n\n  walk(data) {\n    let keys = Object.keys(data); // 获取对象的key\n    keys.forEach((key) => {\n      defineReactive(data, key, data[key]); // Vue.util.defineReactive\n    });\n  }\n}\n\nfunction defineReactive(data, key, value) {\n  // debugger\n  //注意点1: 嵌套对象的深层监测/ 获取到数组对应的dep\n  let childDep = observe(value);\n\n  let dep = new Dep(); // 每个属性都有一个dep\n  //当页面取值时 说明这个值用来渲染了==> 将这个watcher和这个属性对应起来\n  Object.defineProperty(data, key, {\n    get() {\n      console.log(`读取了: ${data}${key}`);\n      // debugger;\n      if (Dep.target) {\n        dep.depend(); // 让这个属性记住这个watcher\n        if (childDep) {\n          // 可能是数组可能是对象\n          // 默认给数组增加了一个dep属性，当对数组这个对象取值的时候\n          childDep.dep.depend(); // 数组存起来了这个渲染watcher\n        }\n      }\n      return value;\n    },\n\n    set(newValue) {\n      if (newValue === value) return;\n      console.log(`准备设置新值了: ${data}${key}`);\n      // debugger\n      //注意点3: 如果用户将值改为对象, 需要继续监控\n      observe(newValue);\n      value = newValue;\n      // debugger;\n      dep.notify(); // 更新操作\n    },\n  });\n}\n\nexport function observe(data) {\n  if (typeof data !== \"object\" || data == null) {\n    return;\n  }\n  if (data.__ob__) {\n    return data;\n  }\n  return new Observer(data);\n}\n","import { pushTarget, popTarget } from \"./dep\";\nimport { nextTick } from \"../util\";\n\nlet id = 0;\n// 在数据劫持的时候 定义defineProperty的时候 已经给每个属性都增加了一个dep\n// 1.是想把这个渲染watcher 放到了Dep.target属性上\n// 2.开始渲染 取值会调用get方法,需要让这个属性的dep 存储当前的watcher\n// 3.页面上所需要的属性都会将这个watcher存在自己的dep中\n// 4.等会属性更新了 就重新调用渲染逻辑 通知自己存储的watcher来更新\n\nclass Watcher {\n  // vm: 实例  exprOrFn: vm._update(vm._render())\n  constructor(vm, exprOrFn, cb, options) {\n    this.vm = vm;\n    this.exprOrFn = exprOrFn;\n    this.cb = cb;\n    this.options = options;\n    this.user = options.user; // 这是一个用户watcher\n\n    this.id = id++; // watcher的唯一标识\n    this.deps = []; // watcher记录有多少dep依赖他\n    this.depsId = new Set();\n\n    debugger\n    // 设置this.getter引用\n    if (typeof exprOrFn == \"function\") {\n      this.getter = exprOrFn;\n    } else {\n      this.getter = function () {\n        // exprOrFn 可能传递过来的是一个字符串a\n        // 当去当前实例上取值时 才会触发依赖收集\n        let path = exprOrFn.split(\".\"); // ['a','a','a']\n        let obj = vm;\n        for (let i = 0; i < path.length; i++) {\n          obj = obj[path[i]]; // vm.a --> vm.a.a\n        }\n        return obj;\n      };\n    }\n\n    this.get(); // 默认会调用1次get方法，用于进行初次和渲染\n  }\n\n  get() {\n    // Dep.target = watcher\n    pushTarget(this); // 当前watcher实例\n    // 调用exprOrFn==> render方法()==> 取值（执行了get方法）\n    let result = this.getter();\n    popTarget(); //渲染完成后 将watcher删掉了\n    return result;\n  }\n\n  addDep(dep) {\n    // debugger\n    let id = dep.id;\n    if (!this.depsId.has(id)) {\n      this.deps.push(dep);\n      this.depsId.add(id);\n      dep.addSub(this);\n    }\n    // debugger\n  }\n\n  update() {\n    // 这里不要每次都调用get方法 get方法会重新渲染页面\n    queueWatcher(this); // 引入暂存的概念\n\n    // --------------- old -------------------------\n    // this.get(); // 重新渲染\n    // debugger\n    // console.log('触发了重渲染--')\n  }\n\n  run() {\n    let newValue = this.get(); // 渲染逻辑\n    let oldValue = this.value;\n    this.value = newValue; // 更新一下老值\n    if (this.user) {\n      this.cb.call(this.vm, newValue, oldValue);\n    }\n  }\n}\n\n// 将需要批量更新的watcher 存到一个队列中，稍后让watcher执行\nlet queue = [];\nlet has = {};\nlet pending = false;\n\nfunction flushSchedulerQueue() {\n  queue.forEach((watcher) => {\n    // debugger\n    watcher.run();\n    if (!watcher.user) {\n      watcher.cb();\n    }\n  });\n  queue = [];\n  has = {};\n  pending = false;\n}\n\nfunction queueWatcher(watcher) {\n  const id = watcher.id; // 对watcher进行去重\n  // debugger;\n  if (has[id] == null) {\n    queue.push(watcher); // 将watcher存到队列中\n    has[id] = true;\n    // 等待所有同步代码执行完毕后在执行\n    if (!pending) {\n      // 如果还没清空队列，就不要在开定时器了  防抖处理\n      // setTimeout(flushSchedulerQueue);\n      nextTick(flushSchedulerQueue);\n      pending = true;\n    }\n  }\n}\n\nexport default Watcher;\n","import { observe } from \"./observer/index\";\nimport { proxy, nextTick } from \"./util.js\";\nimport Watcher from './observer/watcher'\n\nexport function initState(vm) {\n  // vm.$options\n  const opts = vm.$options;\n  if (opts.props) {\n    initProps(vm);\n  }\n  if (opts.methods) {\n    initMethods(vm);\n  }\n  if (opts.data) {\n    initData(vm);\n  }\n  if (opts.computed) {\n    initComputed(vm);\n  }\n  if (opts.watch) {\n    initWatch(vm);\n  }\n}\n\nfunction initData(vm) {\n  // 数据的初始化操作\n  let data = vm.$options.data;\n  vm._data = data = typeof data == \"function\" ? data.call(vm) : data;\n\n  // 当我去vm上取属性时 ，帮我将属性的取值代理到vm._data上\n  for (let key in data) {\n    proxy(vm, \"_data\", key);\n  }\n\n  observe(data);\n}\n\nfunction initProps() {}\nfunction initMethods() {}\n\nfunction initComputed() {}\nfunction initWatch(vm) {\n  debugger\n  let watch = vm.$options.watch;\n  for (let key in watch) {\n    const handler = watch[key]; // handler可能是\n    if (Array.isArray(handler)) {\n      // 数组\n      handler.forEach((handle) => {\n        createWatcher(vm, key, handle);\n      });\n    } else {\n      // 字符串\\对象\\函数\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher(vm, exprOrFn, handler, options) {\n  // options 可以用来标识 是用户watcher\n  if (typeof handler == \"object\") {\n    options = handler;\n    handler = handler.handler; // 是一个函数\n  }\n  if (typeof handler == \"string\") {\n    handler = vm[handler]; // 将实例的方法作为handler\n  }\n  // key + handler: 用户传入的选项\n  return vm.$watch(exprOrFn, handler, options);\n}\n\n// stateMixin导出\nexport function stateMixin(Vue) {\n  Vue.prototype.$nextTick = function (cb) {\n    nextTick(cb);\n  };\n\n  Vue.prototype.$watch = function (exprOrFn, cb, options = {}) {\n    // 数据应该依赖这个watcher  数据变化后应该让watcher从新执行\n    let watcher = new Watcher(this, exprOrFn, cb, { ...options, user: true });\n    if (options.immediate) {\n      cb(); // 如果是immdiate应该立刻执行\n    }\n  };\n}\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // 标签名\n// ?:匹配不捕获\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // </my:xx>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute =\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的    aaa=\"aaa\"  a='aaa'   a=aaa\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >    >   <div></div>  <br/>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // 匹配中括号{{}}\n\n// 数据结构 树、栈、链表、队列、\nlet html = \"\";\nlet root;\nlet currentParent;\nlet stack = [];\n\n// 解析html字符串\nexport function parseHTML(htmlContent) {\n  html = htmlContent;\n\n  // 只要html不为空字符串就一直解析\n  while (html) {\n    let text;\n    // 尝试获取 \"<\" 字符\n    let textEnd = html.indexOf(\"<\");\n    // 如果当前内容以\"<\" 字符开头，说明它肯定是一个标签（开始/结束标签）\n    if (textEnd == 0) {\n      // 尝试匹配 是否是开始标签\n      const startTagMatch = parseStartTag();\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs);\n        // console.log(\"处理完开始标签的html--\", html);\n        continue;\n      }\n      // 尝试匹配 是否是结束标签\n      const endTagMatch = html.match(endTag);\n      if (endTagMatch) {\n        advance(endTagMatch[0].length);\n        end(endTagMatch[1]); // 将结束标签传入\n        // console.log(\"处理完结束标签的html--\", html);\n        continue;\n      }\n    }\n    // 简化的情况下，说明此时的字符内容是 文本类型\n    if (textEnd > 0) {\n      text = html.substring(0, textEnd);\n    }\n    if (text) {\n      // 处理文本\n      advance(text.length);\n      chars(text);\n      // console.log(\"处理完文本类型的html--\", html);\n    }\n    // break;\n  }\n\n  // console.log('最后生成的AST树--', root)\n  return root;\n}\n\n// 解析开始标签\nfunction parseStartTag() {\n  const start = html.match(startTagOpen);\n  // 如果start命中，说明是开始标签\n  if (start) {\n    // console.log('start', start)\n    const match = {\n      tagName: start[1],\n      attrs: [],\n    };\n    // 获取到 \"<div\" 里的div后，就删除开始标签(\"<div\")\n    advance(start[0].length);\n    // console.log('html--', html)\n\n    // 如果直接是闭合标签了 说明没有属性\n    let end, attr;\n    // 不是结尾标签 && 能匹配到属性\n    while (\n      !(end = html.match(startTagClose)) &&\n      (attr = html.match(attribute))\n    ) {\n      // attrs的value,可能分别是正则匹配组的第3/4/5个索引值\n      match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] });\n      // 处理/缓存下了开始标签里的属性后，就去掉当前属性对应的 字符内容\n      advance(attr[0].length);\n    }\n    // 如果匹配到开始标签的结束字符，就删除它 \">\" + 返回开始标签的缓存对象\n    if (end) {\n      // console.log('end--', end)\n      advance(end[0].length);\n      return match;\n    }\n  }\n}\n\n// 将字符串进行截取操作 在更新html内容\nfunction advance(n) {\n  html = html.substring(n);\n}\n\n// 创建AST单个节点\nfunction createASTElement(tagName, attrs) {\n  return {\n    tag: tagName, // 标签名\n    type: 1, // 元素类型\n    children: [], // 孩子列表\n    attrs, // 属性集合\n    parent: null, // 父元素\n  };\n}\n\nfunction start(tagName, attrs) {\n  // 创建一个AST元素节点 + 如果没有根元素，就把它作为根元素\n  let element = createASTElement(tagName, attrs);\n  if (!root) {\n    root = element;\n  }\n  // 当前解析的标签 保存起来，用于之后构建树形关系\n  currentParent = element;\n  // 将生成的单个ast元素节点放到栈中\n  stack.push(element);\n}\n// 创建文本类型的AST节点 + 作为子节点放入到父节点中\nfunction chars(text) {\n  text = text.trim();\n  if (text) {\n    currentParent.children.push({\n      type: 3,\n      text,\n    });\n  }\n}\n\n// <div> <p></p> hello</div>    currentParent=p\n// 处理结束标签的情况： 创建父子关系\nfunction end(tagName) {\n  // 在结尾标签处 创建父子关系\n  let element = stack.pop(); // 取出栈中的最后一个AST元素节点\n  currentParent = stack[stack.length - 1];\n  if (currentParent) {\n    // 在闭合时可以知道这个标签的父亲是谁\n    element.parent = currentParent;\n    currentParent.children.push(element);\n  }\n}\n","// 编写 <div id=\"app\" style=\"color:red\"> hello {{name}} <span>hello</span></div>\n\n// 结果:render(){\n//    return _c('div',{id:'app',style:{color:'red'}},_v('hello'+_s(name)),_c('span',null,_v('hello')))\n//}\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\n\nexport function generate(el) {\n  let children = genChildren(el); // 儿子的生成\n  let code = `_c('${el.tag}',${\n    el.attrs.length ? `${genProps(el.attrs)}` : \"undefined\"\n  }${children ? `,${children}` : \"\"})`;\n  return code;\n}\n\n//  语法层面的转义\nfunction genProps(attrs) {\n  // [{name: id, value: \"app\"}, {name: style, value: \"fontSize:12px;color:red\"} ]\n  let str = \"\";\n  for (let i = 0; i < attrs.length; i++) {\n    let attr = attrs[i];\n\t\t// 对样式进行特殊的处理\n    if (attr.name === \"style\") {\n      let obj = {}; \n      attr.value.split(\";\").forEach((item) => {\n        let [key, value] = item.split(\":\");\n        obj[key] = value;\n      });\n      attr.value = obj;\n    }\n    str += `${attr.name}:${JSON.stringify(attr.value)},`;\n  }\n\t// 去除最后一个多余的“,” 逗号字符串\n  return `{${str.slice(0, -1)}}`;\n}\n\nfunction genChildren(el) {\n  const children = el.children;\n  if (children) {\n    // 将所有转化后的儿子，用逗号拼接起来\n    return children.map(child => gen(child)).join(\",\");\n  }\n}\n\nfunction gen(node) {\n  if (node.type == 1) {\n\t\t// 递归调用generate，从而生成元素节点的 字符串\n    return generate(node); \n  } else {\n    let text = node.text; // 获取文本\n    // 如果是普通文本，即不带{{}}\n\t\t// _v('hello {{ name }} world {{msg}} aa')   => _v('hello'+_s(name) +'world' + _s(msg))\n    if (!defaultTagRE.test(text)) {\n      return `_v(${JSON.stringify(text)})`; \n    }\n\n\t\t// 处理带有变量的文本内容\n    let tokens = []; // 存放每一段的代码\n    let lastIndex = (defaultTagRE.lastIndex = 0); // 如果正则是全局模式 需要每次使用前置为0\n    let match, index; // 每次匹配到的结果\n    while ((match = defaultTagRE.exec(text))) {\n\t\t\t// console.log('match--', match)\n      index = match.index; // 保存匹配到的索引\n\t\t\t// 存入变量文本前的 普通文本内容\n      if (index > lastIndex) {\n        tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n      }\n\t\t\t// 存入变量文本内容 + 更新lastIndex指向\n      tokens.push(`_s(${match[1].trim()})`);\n      lastIndex = index + match[0].length;\n    }\n\t\t// 存入变量文本后的 普通文本内容\n    if (lastIndex < text.length) {\n      tokens.push(JSON.stringify(text.slice(lastIndex)));\n    }\n\t\t// console.log('tokens--', tokens)\n    return `_v(${tokens.join(\"+\")})`;\n  }\n}\n","//  <div id=\"app\">hello {{name}} <span>world</span> <p></p></div>\nimport { parseHTML } from \"./parse.js\";\nimport { generate } from \"./generate\";\n\n\nexport function compileToFunctions(template) {\n  // html模板 => render函数  (ast是用来描述代码的)\n  // 1.需要将html代码转化成\"ast\"语法树 可以用ast树来描述语言本身\n  let ast = parseHTML(template);\n  \n  // 2.优化静态节点\n\n  // 3.通过这课树 重新的生成代码\n  let code = generate(ast);\n  // console.log('generateCode--', code)\n\n  // 4.将字符串变成函数 限制取值范围 通过with来进行取值 \n  // 稍后调用render函数就可以通过改变this 让这个函数内部取到结果了\n  let render = new Function(`with(this){return ${code}}`);\n  console.log('compileToFunctions里生成的render函数是--', render)\n  console.log('------------------------------------------')\n  return render;\n\n}\n","export function patch(oldVnode, vnode) {\n  // 第1次渲染：oldVnode: id#app; vnode: 生成的虚拟dom\n\n  // 将虚拟节点转化成真实节点\n  let el = createElm(vnode); // 产生真实的dom\n  let parentElm = oldVnode.parentNode; // 获取老的app的父亲 => body\n  parentElm.insertBefore(el, oldVnode.nextSibling); // 当前的真实元素插入到app的后面\n  parentElm.removeChild(oldVnode); // 删除老的节点\n  console.log('el是---',el)\n  console.log('------------------------------------')\n  // debugger\n  return el\n}\n\nfunction createElm(vnode) {\n  let { tag, children, key, data, text } = vnode;\n  if (typeof tag == \"string\") {\n    // 创建元素 放到vnode.el上\n    vnode.el = document.createElement(tag);\n\n    // 只有元素才有属性\n    updateProperties(vnode);\n\n    children.forEach((child) => {\n      // 遍历儿子 将儿子渲染后的结果扔到父亲中\n      vnode.el.appendChild(createElm(child));\n    });\n  } else {\n    // 创建文件 放到vnode.el上\n    vnode.el = document.createTextNode(text);\n  }\n  return vnode.el;\n}\n\n// vue 的渲染流程\n//  先初始化数据==> 将模板进行编译==> render函数==>\n//  生成虚拟节点==> 生成真实的dom==> 渲染到页面上\n\nfunction updateProperties(vnode) {\n  let el = vnode.el;\n  let newProps = vnode.data || {};\n  for (let key in newProps) {\n    if (key == \"style\") {\n      // {color:red}\n      for (let styleName in newProps.style) {\n        el.style[styleName] = newProps.style[styleName];\n      }\n    } else if (key == \"class\") {\n      el.className = el.class;\n    } else {\n      el.setAttribute(key, newProps[key]);\n    }\n  }\n}\n","import { patch } from \"./vdom/patch\";\nimport Watcher from \"./observer/watcher\";\n\nexport function lifecycleMixin(Vue) {\n  Vue.prototype._update = function (vnode) {\n    const vm = this;\n    // debugger\n\n    // 用新的创建的元素 替换老的vm.$el\n    vm.$el = patch(vm.$el, vnode);\n  };\n}\n\nexport function mountComponent(vm, el) {\n  callHook(vm, \"beforeMount\");\n\n  // 先调用render方法创建虚拟节点，再将虚拟节点渲染到页面上\n  let updateComponent = () => {\n    vm._update(vm._render());\n  };\n\n  // 初始化就会创建 渲染watcher==> 要把属性 和 watcher 绑定在一起\n  let watcher = new Watcher(vm, updateComponent,\n    () => {\n      callHook(vm, \"updated\");\n    },\n    true\n  ); \n\n  callHook(vm, \"mounted\");\n}\n\nexport function callHook(vm, hook) {\n  // vm.$options.created  = [a1,a2,a3]\n  const handlers = vm.$options[hook];\n  if (handlers) {\n    for (let i = 0; i < handlers.length; i++) {\n      handlers[i].call(vm); // 更改生命周期中的this\n    }\n  }\n}\n","import { initState } from \"./state\";\nimport { compileToFunctions } from \"./compiler/index\";\nimport { mountComponent, callHook } from \"./lifecycle\";\nimport { mergeOptions } from \"./util\";\n\n\nexport function initMixin(Vue) {\n  Vue.prototype._init = function (options) {\n    const vm = this;\n    // vm.$options = options;\n    // 需要将用户自定义的options 和全局的options做合并\n    vm.$options = mergeOptions(vm.constructor.options, options);\n    callHook(vm, 'beforeCreate') \n\n    // 初始化状态 （将数据做一个初始化的劫持 当我改变数据时应该更新视图）\n    // vue组件中有很多状态 data props watch computed\n    initState(vm);\n\n    // 在处理完state之后，调用created钩子\n    callHook(vm, 'created')\n\n    // vue里面核心特性 响应式数据原理\n    // Vue 是一个什么样的框架 MVVM\n    // 数据变化视图会更新，视图变化数据会被影响\n    // （MVVM）不能跳过数据去更新视图，$ref\n\n    // 如果当前有el属性说明要渲染模板\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n\n  Vue.prototype.$mount = function (el) {\n    // 挂载操作\n    const vm = this;\n    const options = vm.$options;\n    el = document.querySelector(el);\n    vm.$el = el;\n    // debugger\n\n    if (!options.render) {\n      // 没render 将template转化成render方法\n      let template = options.template;\n      if (!template && el) {\n        template = el.outerHTML;\n      }\n      // 编译原理 将模板编译成render函数\n      // 渲染时用的都是这个render方法\n      const render = compileToFunctions(template);\n      options.render = render;\n    }\n\n    // 需要挂载这个组件\n    mountComponent(vm, el);\n  };\n}\n","export function renderMixin(Vue) {\n\tVue.prototype._render = function () {\n    const vm = this;\n    const render = vm.$options.render;\n    let vnode = render.call(vm);\n    console.log('render函数是--', render);\n    console.log('render函数生成的vdom是--', vnode);\n    return vnode;\n  }; \n\n  // 用对象来描述dom的解构\n  Vue.prototype._c = function () {\n    // 创建虚拟dom元素\n    return createElement(...arguments);\n  };\n  Vue.prototype._v = function (text) {\n    // 创建虚拟dom文本元素\n    return createTextVnode(text);\n  };\n  Vue.prototype._s = function (val) {\n    // stringify\n    return val == null\n      ? \"\"\n      : typeof val == \"object\"\n      ? JSON.stringify(val)\n      : val;\n  };\n}\n\n// _c('div',{},_v(),_c())\nfunction createElement(tag, data = {}, ...children) {\n  return vnode(tag, data, data.key, children);\n}\nfunction createTextVnode(text) {\n  return vnode(undefined, undefined, undefined, undefined, text);\n}\n// 用来产生虚拟dom的\nfunction vnode(tag, data, key, children, text) {\n  return {\n    tag,\n    data,\n    key,\n    children,\n    text,\n  };\n}\n","import { mergeOptions } from \"../util\";\n\nexport function initGlobalApi(Vue) {\n  Vue.options = {}; // Vue.components/ Vue.diretive\n  Vue.mixin = function (mixin) {\n    // 合并对象: 目前先考虑生命周期，不考虑其他的合并 data/ computed/ watch\n    // 把 全局Vue.options和 Vue.mixin等进行合并\n\t\tthis.options = mergeOptions(this.options, mixin);\n  };\n}\n","import { initMixin } from \"./init\";\nimport { lifecycleMixin } from \"./lifecycle\";\nimport { renderMixin } from \"./vdom/index\";\nimport { stateMixin } from './state';\n\nimport { initGlobalApi } from './global-api/index';\n\nfunction Vue(options) {\n  this._init(options); // 入口方法,做初始化操作\n}\n\n// 写成一个个的插件进行对原型的扩展\ninitMixin(Vue);  // init方法\nlifecycleMixin(Vue);  // _update\nrenderMixin(Vue);  // _render\nstateMixin(Vue);   // $nextTick()、$watch()等实现\n\n\n// 静态方法 Vue.component、Vue.directive、Vue.extend、Vue.mixin ...\ninitGlobalApi(Vue);\n\n\nexport default Vue;\n"],"names":["oldArrayProtoMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","_len","arguments","length","args","_key","result","apply","inserted","ob","__ob__","slice","observeArray","dep","notify","defineProperty","target","key","value","enumerable","configurable","proxy","vm","data","get","set","newValue","LIFECYCLE_HOOKS","strats","parentVal","childValue","hook","mergeHook","concat","mergeOptions","parent","child","options","mergeField","hasOwnProperty","callbacks","pending","flushCallbacks","cb","shift","timerFunc","Promise","resolve","then","MutationObserver","observe","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","nextTick","push","id","Dep","_classCallCheck","subs","_createClass","depend","addDep","addSub","watcher","update","pushTarget","popTarget","Observer","isArray","__proto__","walk","item","keys","defineReactive","childDep","console","log","_typeof","Watcher","exprOrFn","user","deps","depsId","Set","getter","path","split","obj","i","has","add","queueWatcher","run","oldValue","call","queue","flushSchedulerQueue","initState","opts","$options","props","initData","computed","watch","initWatch","_data","_loop","handler","handle","createWatcher","$watch","stateMixin","Vue","$nextTick","undefined","_objectSpread","immediate","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","html","root","currentParent","stack","parseHTML","htmlContent","text","textEnd","indexOf","startTagMatch","parseStartTag","start","tagName","attrs","endTagMatch","match","advance","end","substring","chars","attr","name","n","createASTElement","tag","type","children","element","trim","pop","defaultTagRE","generate","el","genChildren","code","genProps","str","_item$split","_item$split2","_slicedToArray","JSON","stringify","map","gen","join","node","test","tokens","lastIndex","index","exec","compileToFunctions","template","ast","render","Function","patch","oldVnode","vnode","createElm","parentElm","parentNode","insertBefore","nextSibling","removeChild","createElement","updateProperties","appendChild","newProps","styleName","style","className","setAttribute","lifecycleMixin","_update","$el","mountComponent","callHook","updateComponent","_render","handlers","initMixin","_init","constructor","$mount","querySelector","outerHTML","renderMixin","_c","_v","createTextVnode","_s","val","initGlobalApi","mixin"],"mappings":"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"}